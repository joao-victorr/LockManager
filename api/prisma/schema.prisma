// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UsersWeb {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String

  @@map("users_web")
}

model Devices {
  id               String             @id @default(cuid())
  name             String
  ip               String             @unique
  users            String
  password         String
  status           Boolean            @default(true)
  UsersDevices     UsersDevices[]
  GroupsDevices    GroupsDevices[]
  TimeZonesDevices TimeZonesDevices[]
  TimeSpansDevices TimeSpansDevices[]
  AcccessRrules    AcccessRules[]
  UsersGroups      UsersGroups[]

  @@map("devices")
}

model Users {
  id           String         @id @default(cuid())
  name         String
  image        Bytes
  UsersDevices UsersDevices[]
  UsersGroups  UsersGroups[]

  @@map("users")
}

model UsersGroups {
  id         String  @id @default(cuid())
  id_devices String
  devices    Devices @relation(fields: [id_devices], references: [id])
  id_users   String
  users      Users   @relation(fields: [id_users], references: [id])
  id_groups  String
  groups     Groups  @relation(fields: [id_groups], references: [id])

  @@map("users_groups")
}

model Groups {
  id            String          @id @default(cuid())
  name          String
  GroupsDevices GroupsDevices[]
  AcccessRrules AcccessRules[]
  UsersGroups   UsersGroups[]

  @@map("groups")
}

model UsersDevices {
  id         String  @id @default(cuid())
  code       Int
  id_devices String
  devices    Devices @relation(fields: [id_devices], references: [id])
  id_users   String
  users      Users   @relation(fields: [id_users], references: [id])

  @@map("users_devices")
}

model GroupsDevices {
  id         String  @id @default(cuid())
  code       Int
  id_devices String
  devices    Devices @relation(fields: [id_devices], references: [id])
  id_groups  String
  groups     Groups  @relation(fields: [id_groups], references: [id])

  @@map("groups_devices")
}

model TimeZones {
  id               String             @id @default(cuid())
  name             String
  TimeSpans        TimeSpans[]
  TimeZonesDevices TimeZonesDevices[]
  AcccessRrules    AcccessRules[]

  @@map("time_zones")
}

model TimeZonesDevices {
  id           String    @id @default(cuid())
  code         Int
  id_devices   String
  devices      Devices   @relation(fields: [id_devices], references: [id])
  id_TimeZones String
  TimeZones    TimeZones @relation(fields: [id_TimeZones], references: [id])

  @@map("time_zones_devices")
}

model TimeSpans {
  id               String             @id @default(cuid())
  time_zones_id    String
  time_zones       TimeZones          @relation(fields: [time_zones_id], references: [id])
  start            Int
  end              Int
  sun              Int
  mon              Int
  tue              Int
  wed              Int
  thu              Int
  fri              Int
  sat              Int
  hol1             Int
  hol2             Int
  hol3             Int
  TimeSpansDevices TimeSpansDevices[]

  @@map("time_spans")
}

model TimeSpansDevices {
  id           String    @id @default(cuid())
  code         Int
  id_devices   String
  devices      Devices   @relation(fields: [id_devices], references: [id])
  id_TimeSpans String
  TimeSpans    TimeSpans @relation(fields: [id_TimeSpans], references: [id])

  @@map("time_spans_devices")
}

model AcccessRules {
  id           String    @id @default(cuid())
  code         Int
  id_devices   String
  devices      Devices   @relation(fields: [id_devices], references: [id])
  id_TimeZones String
  timeZones    TimeZones @relation(fields: [id_TimeZones], references: [id])
  id_groups    String
  groups       Groups    @relation(fields: [id_groups], references: [id])

  @@map("acccess_rules")
}
